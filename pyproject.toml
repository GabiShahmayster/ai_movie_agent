[project]
name = "ai-movie-agent"
version = "0.2.0"
description = "A modular AI movie analysis agent using LangGraph and Ollama"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "AI Movie Agent Team"}
]
license = {text = "MIT"}
keywords = ["ai", "movie", "analysis", "langgraph", "ollama"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "duckduckgo-search>=8.1.1",
    "langchain>=0.3.26",
    "langchain-community>=0.3.27",
    "langchain-ollama>=0.3.5",
    "langgraph>=0.5.4",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pytest-cov>=4.0.0",
]

web = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
]

cache = [
    "redis>=5.0.0",
]

db = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
]

all = [
    "ai-movie-agent[dev,web,cache,db]"
]

[project.urls]
Homepage = "https://github.com/yourusername/ai-movie-agent"
Documentation = "https://github.com/yourusername/ai-movie-agent#readme"
Repository = "https://github.com/yourusername/ai-movie-agent"
Issues = "https://github.com/yourusername/ai-movie-agent/issues"

[project.scripts]
movie-agent = "main:main"
movie-test = "test_movie:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "langgraph.*",
    "duckduckgo_search.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
]
